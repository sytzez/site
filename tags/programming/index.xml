<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>programming on sytzez</title>
    <link>https://sytzez.com/tags/programming/</link>
    <description>Recent content in programming on sytzez</description>
    <image>
      <url>https://sytzez.com/papermod-cover.png</url>
      <link>https://sytzez.com/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 16 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://sytzez.com/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sketch for a new programming language: Part 2</title>
      <link>https://sytzez.com/blog/sketch-for-a-new-programming-language-2/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sytzez.com/blog/sketch-for-a-new-programming-language-2/</guid>
      <description>A solution to inheritance I&amp;rsquo;ve had some more thought about my programming language &amp;ldquo;Compost&amp;rdquo;. It has a solution to the old problems of object oriented programming, mainly class inheritance.
One of the problems class inheritance tries to solve is repeated code between classes, by creating a superclass that contains all the common methods, which subclasses inherit from it. But class inheritance comes with its own problems, and has gotten out of favor.</description>
    </item>
    
    <item>
      <title>Sketch for a new programming language</title>
      <link>https://sytzez.com/blog/sketch-for-a-new-programming-language/</link>
      <pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sytzez.com/blog/sketch-for-a-new-programming-language/</guid>
      <description>I&amp;rsquo;m coming up with the spec of a new programming language. Working title: &amp;ldquo;Compost&amp;rdquo;. Don&amp;rsquo;t worry, it&amp;rsquo;s just for fun. For now this is just a first sketch of the ideas I had today. They are subject to change.
The main idea of the language is ultimate composability and recomposability. It forces the programmer to think in terms of the minimum amount of dependencies required for each part of the code, and makes each part as reusable as possible.</description>
    </item>
    
  </channel>
</rss>
