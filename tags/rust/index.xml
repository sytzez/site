<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>rust on sytzez</title>
    <link>https://sytzez.com/tags/rust/</link>
    <description>Recent content in rust on sytzez</description>
    <image>
      <url>https://sytzez.com/papermod-cover.png</url>
      <link>https://sytzez.com/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 27 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://sytzez.com/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a Compiler for Compost using Rust, Part 1: Lexical Analysis</title>
      <link>https://sytzez.com/blog/creating-a-compiler-for-compost-using-rust-part-1-lexical-analysis/</link>
      <pubDate>Sun, 27 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sytzez.com/blog/creating-a-compiler-for-compost-using-rust-part-1-lexical-analysis/</guid>
      <description>I&amp;rsquo;ve set out to write a compiler for Compost, the experimental programming language I came up with about a month ago. The repository for it can be found on GitHub and there is also a playground available where you can try out the language. This is the first part of a series of blogs detailing my experience of writing my first compiler.
Structure of a Compiler Before embarking on this journey, I did some research on how compilers normally work.</description>
    </item>
    
  </channel>
</rss>
